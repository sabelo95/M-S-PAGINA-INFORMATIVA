# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew'  # Path to your Gradle wrapper
    tasks: 'clean build'  # Replace with the tasks you want to run
    options: '-Xmx3072m' 
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'  # Updated pattern for test result files
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'  # Replace with your JDK version
    jdkArchitectureOption: 'x64'


- task: Gradle@4
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'test'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: false
    spotBugsAnalysis: false

- task: CopyFiles@2
  inputs:
    SourceFolder: '/build/libs'
    Contents: |
      *jar
      !*plain
    TargetFolder: '/deployment/app'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'Artifacts'
    publishLocation: 'Container'